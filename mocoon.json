{
  "uuid": "07a35980-17ba-4c66-9387-396a02a86abd",
  "lastMigration": 33,
  "name": "portfolio",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3004,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "309eb9fb-fc32-4fb6-b233-e87822718446",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "",
      "responses": [
        {
          "uuid": "827a175b-4202-48b6-948b-f37a2745b24b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "1d7e9d7a-bafe-450a-b24c-5db07f3a8385",
      "type": "crud",
      "documentation": "",
      "method": "",
      "endpoint": "",
      "responses": [
        {
          "uuid": "9eeaff10-7b8f-4b1f-b438-250820567565",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "8vp8",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "de07e7b6-5cbc-4f8f-ad2b-117c36856c22",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "8vp8",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    },
    {
      "uuid": "bed0904b-2efe-457a-a18d-dd4ac9cd1ca6",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "api/posts",
      "responses": [
        {
          "uuid": "8eca3370-1d18-4a92-9d32-9b35d763f4b4",
          "body": "[\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Building a Todo App in React\",\r\n    \"date\": \"2025-05-25\",\r\n    \"content\": \"# Building a Todo App in React\\n\\nThis post walks through building a simple Todo application using React hooks and localStorage.\\n\\n```mermaid\\ngraph TD\\n  A[Start App] --> B{Add Task}\\n  B --> C[Render with useState]\\n  C --> D[Persist with localStorage]\\n  D --> E[Done!]\\n```\",\r\n    \"category\": \"latest\",\r\n    \"tags\": [\"React\", \"JavaScript\", \"CSS\"]\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Introduction to Minimal APIs in .NET\",\r\n    \"date\": \"2025-05-22\",\r\n    \"content\": \"# Minimal APIs in .NET\\n\\n.NET 7 introduces a way to write APIs with minimal boilerplate:\\n\\n```csharp\\nvar app = WebApplication.Create();\\napp.MapGet(\\\"/hello\\\", () => \\\"Hello World\\\");\\napp.Run();\\n```\\n\\n```mermaid\\nflowchart LR\\n  A[Request] --> B[Endpoint]\\n  B --> C[Response]\\n```\",\r\n    \"category\": \"latest\",\r\n    \"tags\": [\"C#\", \".NET\", \"API\"]\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": \"Deploying Angular Apps to Azure Static Web Apps\",\r\n    \"date\": \"2025-04-30\",\r\n    \"content\": \"# How to deploy Angular\\n\\nSteps to deploy Angular projects to Azure Static Web Apps:\\n\\n1. Create repo\\n2. Push project\\n3. Set up GitHub Action\\n\\n```mermaid\\ngraph TD\\n  Dev[Developer] --> Repo[GitHub Repo]\\n  Repo -->|Push| CI[GitHub Action]\\n  CI --> Azure[Azure Static Web Apps]\\n```\",\r\n    \"category\": \"latest\",\r\n    \"tags\": [\"Angular\", \"Azure\", \"CI/CD\"]\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"name\": \"Dark Mode in CSS: Techniques and Best Practices\",\r\n    \"date\": \"2025-04-28\",\r\n    \"content\": \"# Dark Mode in CSS\\n\\nUse custom properties and media queries:\\n\\n```css\\n:root {\\n  --bg-color: #fff;\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n  :root {\\n    --bg-color: #000;\\n  }\\n}\\n```\",\r\n    \"category\": \"til\",\r\n    \"tags\": [\"CSS\", \"UX\", \"Accessibility\"]\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"name\": \"Using Azure Form Recognizer with .NET\",\r\n    \"date\": \"2025-03-10\",\r\n    \"content\": \"# Azure Form Recognizer + .NET\\n\\nLearn how to send PDFs to Azure Form Recognizer and extract data.\\n\\n```mermaid\\nsequenceDiagram\\n  participant App\\n  participant Azure\\n  App->>Azure: Send document\\n  Azure-->>App: JSON response\\n```\",\r\n    \"category\": \"til\",\r\n    \"tags\": [\"Azure\", \"OCR\", \"C#\"]\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"name\": \"Managing Users and Roles in SQL Server\",\r\n    \"date\": \"2025-03-01\",\r\n    \"content\": \"# SQL Server User Management\\n\\n```sql\\nCREATE LOGIN myuser WITH PASSWORD = 'Password1!';\\nCREATE USER myuser FOR LOGIN myuser;\\nEXEC sp_addrolemember 'db_datareader', 'myuser';\\n```\",\r\n    \"category\": \"til\",\r\n    \"tags\": [\"SQL\", \"Security\", \"Admin\"]\r\n  },\r\n  {\r\n    \"id\": 7,\r\n    \"name\": \"Comparing React and Angular...\",\r\n    \"date\": \"2025-02-15\",\r\n    \"content\": \"# React vs Angular\\n\\n| Feature         | React      | Angular    |\\n|----------------|------------|------------|\\n| Type           | Library    | Framework  |\\n| Learning Curve | Moderate   | Steep      |\\n\\n```mermaid\\ngraph LR\\n  R[React] --> UI\\n  A[Angular] --> UI\\n  R --> Hooks\\n  A --> DI[Dependency Injection]\\n```\",\r\n    \"category\": \"project\",\r\n    \"tags\": [\"React\", \"Angular\", \"JavaScript\"]\r\n  },\r\n  {\r\n    \"id\": 8,\r\n    \"name\": \"Creating Reusable UI Components in React\",\r\n    \"date\": \"2025-02-05\",\r\n    \"content\": \"# Reusable Components\\n\\nBreak UI into small, focused components:\\n\\n```jsx\\nfunction Button({ children }) {\\n  return <button className=\\\"btn\\\">{children}</button>;\\n}\\n```\",\r\n    \"category\": \"project\",\r\n    \"tags\": [\"React\", \"CSS\", \"Tailwind\"]\r\n  },\r\n  {\r\n    \"id\": 9,\r\n    \"name\": \"Building a CI/CD Pipeline with Azure DevOps\",\r\n    \"date\": \"2025-01-25\",\r\n    \"content\": \"# Azure DevOps Pipelines\\n\\nSteps:\\n1. [x] Define `azure-pipelines.yml`\\n2. [x] Push code\\n3. [ ] Monitor pipeline\\n\\n```mermaid\\ngraph TD\\n  Code --> Build\\n  Build --> Test\\n  Test --> Deploy\\n```\",\r\n    \"category\": \"til\",\r\n    \"tags\": [\"Azure\", \"DevOps\", \"CI/CD\"]\r\n  },\r\n  {\r\n    \"id\": 10,\r\n    \"name\": \"Improving API Performance in ASP.NET Core\",\r\n    \"date\": \"2025-01-10\",\r\n    \"content\": \"# API Performance Tips\\n\\n- Use response caching\\n- Avoid over-fetching\\n- Add pagination\\n\\n```mermaid\\ngraph LR\\n  API -->|Response| Client\\n  API -->|Cached Response| Client\\n```\",\r\n    \"category\": \"til\",\r\n    \"tags\": [\".NET\", \"C#\", \"Performance\"]\r\n  }\r\n]\r\n",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "streamingMode": null,
      "streamingInterval": 0
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "309eb9fb-fc32-4fb6-b233-e87822718446"
    },
    {
      "type": "route",
      "uuid": "1d7e9d7a-bafe-450a-b24c-5db07f3a8385"
    },
    {
      "type": "route",
      "uuid": "bed0904b-2efe-457a-a18d-dd4ac9cd1ca6"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [
    {
      "uuid": "5f303e70-f1e4-49eb-8087-64296bfdf0c2",
      "id": "8vp8",
      "name": "posts",
      "documentation": "",
      "value": "[\n  {\n  \"id\": 1,\n  \"name\": \"Post title\",\n  \"date\": \"2025-05-25\",\n  \"content\": \"Full post content\",\n  \"category\": \"latest\",\n  \"tags\": [\"react\", \"api\", \"hooks\"]\n}\n]"
    }
  ],
  "callbacks": []
}